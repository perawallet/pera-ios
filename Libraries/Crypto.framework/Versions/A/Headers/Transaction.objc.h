// Objective-C API for talking to github.com/algorand/go-algorand-sdk/transaction Go package.
//   gobind -lang=objc github.com/algorand/go-algorand-sdk/transaction
//
// File is generated by gobind. Do not edit.

#ifndef __Transaction_H__
#define __Transaction_H__

@import Foundation;
#include "ref.h"
#include "Universe.objc.h"

#include "Crypto.objc.h"

/**
 * MakeAssetAcceptanceTxn creates a tx for marking an account as willing to accept the given asset
- account is a checksummed, human-readable address that will send the transaction and begin accepting the asset
- feePerByte is a fee per byte
- firstRound is the first round this txn is valid (txn semantics unrelated to asset management)
- lastRound is the last round this txn is valid
- note is an arbitrary byte array
- genesis id corresponds to the id of the network
- genesis hash corresponds to the base64-encoded hash of the genesis of the network
- index is the asset index
 */
FOUNDATION_EXPORT NSData* _Nullable TransactionMakeAssetAcceptanceTxn(NSString* _Nullable account, int64_t feePerByte, int64_t firstRound, int64_t lastRound, NSData* _Nullable note, NSString* _Nullable genesisID, NSString* _Nullable genesisHash, int64_t index, NSError* _Nullable* _Nullable error);

/**
 * MakeAssetConfigTxn creates a tx template for changing the
keys for an asset. An empty string means a zero key (which
cannot be changed after becoming zero); to keep a key
unchanged, you must specify that key.
- account is a checksummed, human-readable address for which we register the given participation key.
- fee is a flat fee
- firstRound is the first round this txn is valid (txn semantics unrelated to key registration)
- lastRound is the last round this txn is valid
- genesis id corresponds to the id of the network
- genesis hash corresponds to the base64-encoded hash of the genesis of the network
 */
FOUNDATION_EXPORT NSData* _Nullable TransactionMakeAssetConfigTxn(NSString* _Nullable account, int64_t feePerByte, int64_t firstRound, int64_t lastRound, NSData* _Nullable note, NSString* _Nullable genesisID, NSString* _Nullable genesisHash, int64_t index, NSString* _Nullable newManager, NSString* _Nullable newReserve, NSString* _Nullable newFreeze, NSString* _Nullable newClawback, NSString* _Nullable assetName, NSString* _Nullable unitName, NSString* _Nullable url, NSData* _Nullable metadataHash, NSError* _Nullable* _Nullable error);

/**
 * MakeAssetTransferTxn creates a tx for sending some asset from an asset holder to another user
the recipient address must have previously issued an asset acceptance transaction for this asset
- account is a checksummed, human-readable address that will send the transaction and assets
- recipient is a checksummed, human-readable address what will receive the assets
- closeAssetsTo is a checksummed, human-readable address that behaves as a close-to address for the asset transaction; the remaining assets not sent to recipient will be sent to closeAssetsTo. Leave blank for no close-to behavior.
- amount is the number of assets to send
- feePerByte is a fee per byte
- firstRound is the first round this txn is valid (txn semantics unrelated to asset management)
- lastRound is the last round this txn is valid
- note is an arbitrary byte array
- genesis id corresponds to the id of the network
- genesis hash corresponds to the base64-encoded hash of the genesis of the network
- creator is the address of the asset creator
- index is the asset index
 */
FOUNDATION_EXPORT NSData* _Nullable TransactionMakeAssetTransferTxn(NSString* _Nullable account, NSString* _Nullable recipient, NSString* _Nullable closeAssetsTo, int64_t amount, int64_t feePerByte, int64_t firstRound, int64_t lastRound, NSData* _Nullable note, NSString* _Nullable genesisID, NSString* _Nullable genesisHash, int64_t index, NSError* _Nullable* _Nullable error);

/**
 * MakePaymentTxn constructs a payment transaction using the passed parameters.
`from` and `to` addresses should be checksummed, human-readable addresses
 */
FOUNDATION_EXPORT NSData* _Nullable TransactionMakePaymentTxn(NSString* _Nullable from, NSString* _Nullable to, int64_t feePerByte, int64_t amount, int64_t firstRound, int64_t lastRound, NSData* _Nullable note, NSString* _Nullable closeRemainderTo, NSString* _Nullable genesisID, NSData* _Nullable genesisHash, NSError* _Nullable* _Nullable error);

/**
 * MakeRekeyTxn constructs a rekey transaction using the passed parameters.
 */
FOUNDATION_EXPORT NSData* _Nullable TransactionMakeRekeyTxn(NSString* _Nullable from, NSString* _Nullable rekeyTo, int64_t feePerByte, int64_t firstRound, int64_t lastRound, NSString* _Nullable genesisID, NSData* _Nullable genesisHash, NSError* _Nullable* _Nullable error);

#endif
